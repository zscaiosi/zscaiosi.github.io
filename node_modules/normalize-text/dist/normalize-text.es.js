/*!
 * normalize-text v0.2.0
 * (c) 2018-present Vitor Cavalcanti
 * Released under the MIT License.
 */
import uncouple from 'uncouple';

var ref = uncouple(Array);
var reduce = ref.reduceRight;

var compose = (function () {
	var λs = [], len = arguments.length;
	while ( len-- ) λs[ len ] = arguments[ len ];

	return function (value) { return reduce(λs, function (value, λ) { return λ(value); }, value); };
});

var ref$1 = uncouple(Array);
var join = ref$1.join;
var ref$1$1 = uncouple(String);
var normalize = ref$1$1.normalize;
var replace = ref$1$1.replace;
var trim = ref$1$1.trim;
var lower = ref$1$1.toLowerCase;
var upper = ref$1$1.toUpperCase;
var indexOf = ref$1$1.indexOf;

var WHITESPACE = ' ';

/**
 * Normalize whitespaces.
 * @example ```js
 * ('  Vitor\n  Luiz\t  Cavalcanti   ') => 'Vitor Luiz Cavalcanti'
 * ```
 * @param {string} value
 * @returns {string}
 */
var normalizeWhitespaces = compose(function (value) { return replace(value, /\s{2,}|\r?\n|\t/g, WHITESPACE); }, function (value) { return trim(value); });

/**
 * Normalize diacritics.
 * @example ```js
 * ('Olá, você aí') => 'Ola, voce ai'
 * ```
 * @param {string} value
 * @returns {string}
 */
var normalizeDiacritics = compose(function (value) { return replace(value, /[\u0080-\uF8FF]/g, ''); }, function (value) { return normalize(value, 'NFKD'); });

/**
 * Normalize paragraph.
 * @example ```js
 * ('era uma vez no mundo encantado') => 'Era um vez no mundo encantado.'
 * ```
 * @param {string} value
 * @returns {string}
 */
var normalizeParagraph = compose(function (value) { return replace(value, value[0], upper(value[0])); }, function (value) { return value[value.length - 1] === '.' ? value : value + '.'; }, normalizeWhitespaces);

/**
 * Normalize texts.
 * @example ```js
 * ([ 'Olá, \n', 'Vitor  LUIz Cavalcanti' ]) => 'ola, vitor luiz cavalcanti'
 * ```
 * @param {(string|Array.<string>)} value
 * @returns {string}
 */
var index = compose(function (value) { return lower(value); }, normalizeWhitespaces, normalizeDiacritics, function (values) { return Array.isArray(values) ? join(values, WHITESPACE) : values; });

export { normalizeWhitespaces, normalizeDiacritics, normalizeParagraph };
export default index;
